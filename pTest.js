testString = "Test←{a←⎕JSON ⍺ ⋄ b e←⍵{0::⍎¨¨⍵.(a b) ⋄ disp←{⎕IO ⎕ML←0 1 ⋄ ⋄ ⍺←⍬ ⋄ dec ctd←2↑⍺ ⋄ ⋄ box←{ ⋄ isor ⍵:⎕FMT⊂⍵ ⋄ 1=≡,⍵:dec open ⎕FMT dec open ⍵ ⋄ mat←matr 1/dec open ⍵ ⋄ r c←×⍴mat ⋄ dec<0∊r c:c/r⌿∇ 1 open mat ⋄ subs←aligned ∇¨mat ⋄ (≢⍴⍵)gaps ⍵ plane subs ⋄ } ⋄ ⋄ aligned←{ ⋄ rows cols←sepr⍴¨⍵ ⋄ sizes←(⌈/rows)∘.,⌈⌿cols ⋄ ctd=0:sizes↑¨⍵ ⋄ v h←sepr⌈0.5×↑(⍴¨⍵)-sizes ⋄ v⊖¨h⌽¨sizes↑¨⍵ ⋄ } ⋄ ⋄ gaps←{ ⋄ ⍺≤2:⍵ ⋄ subs←(⍺-1)∇¨⍵ ⋄ width←⊃⌽⍴⊃subs ⋄ fill←(⍺ width-3 0)⍴' ' ⋄ ↑{⍺⍪fill⍪⍵}/1 open subs ⋄ } ⋄ ⋄ plane←{ ⋄ 2<⍴⍴⍺:⍺ join ⍵ ⋄ odec←(dec shape ⍺)outer ⍵ ⋄ idec←inner ⍺ ⋄ (odec,idec)collect ⍵ ⋄ } ⋄ ⋄ join←{ ⋄ sep←(≢⍵)÷1⌈≢⍺ ⋄ split←(0=sep|⍳≢⍵)⊂[0]⍵ ⋄ (⊂⍤¯1⊢⍺)plane¨split ⋄ } ⋄ ⋄ outer←{ ⋄ sizes←1 0{⊃↓(⍉⍣⍺)⍵}¨sepr⍴¨⍵ ⋄ sides←sizes/¨¨'│─' ⋄ bords←dec↓¨'├┬'glue¨sides ⋄ ↑,¨/('┌' '')⍺ bords'└┐' ⋄ } ⋄ ⋄ inner←{ ⋄ deco←{(type ⍵),1 shape ⍵} ⋄ sepr deco¨matr dec open ⍵ ⋄ } ⋄ ⋄ collect←{ ⋄ lft top tt vv hh←⍺ ⋄ cells←vv right 1 open tt hh lower ⍵ ⋄ boxes←(dec∨0∊⍴⍵)open cells ⋄ lft,top⍪↑⍪⌿,/boxes ⋄ } ⋄ ⋄ right←{ ⋄ types←2⊥¨(⍳⍴⍵)=⊂¯1+⍴⍵ ⋄ chars←'┼┤┴┘'[types] ⋄ rgt←{⍵,(-≢⍵)↑(≢⍵)1 1/'│',⍺} ⋄ ((matr 1 open ⍺),¨chars)rgt¨⍵ ⋄ } ⋄ ⋄ lower←{ ⋄ bot←{⍵⍪(-1⊃⍴⍵)↑⍺ split ⍵} ⋄ split←{((¯2+1⊃⍴⍵)/'─')glue ⍺} ⋄ (matr↑,¨/⍺)bot¨matr ⍵ ⋄ } ⋄ ⋄ type←{ ⋄ dec<|≡⍵:'─' ⋄ isor ⍵:'∇' ⋄ sst←{ ⋄ 0=dec×⍴⍴⍵:'─' ⋄ (⊃⍵∊'¯',⎕D)⊃'#~' ⋄ }∘⍕ ⋄ 0=≡⍵:sst ⍵ ⋄ {(1=⍴⍵)⊃'+'⍵}∪,sst¨dec open ⍵ ⋄ } ⋄ ⋄ shape←{ ⋄ dec≤0=⍴⍴⍵:⍺/¨'│─' ⋄ cols←(×¯1↑⍴⍵)⊃'⊖→' ⋄ rsig←(××/¯1↓⍴⍵)⊃'⌽↓' ⋄ rows←(¯1+3⌊⍴⍴⍵)⊃'│'rsig'⍒' ⋄ rows cols ⋄ } ⋄ ⋄ matr←{↑,↓⍵} ⋄ sepr←{+/¨1⊂↑⍵} ⋄ open←{16::(1⌈⍴⍵)⍴⊂'[ref]' ⋄ (⍺⌈⍴⍵)⍴⍵} ⋄ isor←{1 ⍬≡(≡⍵)(⍴⍵)} ⋄ glue←{0=⍴⍵:⍵ ⋄ ↑⍺{⍺,⍺⍺,⍵}/⍵} ⋄ ⋄ isor ⍵:⎕FMT⊂⍵ ⋄ 1=≡,⍵:⎕FMT ⍵ ⋄ box ⍵ ⋄ } ⋄ ⍎¨¨¨⍵.(a b)}a ⋄ test←(a.f)∘{0::(⍎⍺)⍵ ⋄ (⊃⍵)(⍎⍺)(2⊃⍵)}¨¨b e ⋄ ⋄ user←(⍵)∘{0::(⍎⍺)⍵ ⋄ (⊃⍵)(⍎⍺)(2⊃⍵)}¨¨b e ⋄ r←(⊃∧+/)user≡¨test ⋄ ⋄ 0=r:user{ ⋄ (⊃⌽⍵)≡2⊃⍵:('Incorrect.<br />Your log:<br /><pre class=\"apl\">      '),(⊃⌽⍵),(,'<br>',⍤1⍨disp⊃⊃⍵),'<br>','</pre>',⍨(,'<br>',⍤1⍨disp⊃⊃⍺) ⋄ ('      '),(⍕⊃⊃⍵),(⊃⌽⍵),'<br>',(⍕2⊃⊃⍵),'</pre>',⍨⍕⊃⊃⍺ ⋄ }b ⍵ ⋄ r}";